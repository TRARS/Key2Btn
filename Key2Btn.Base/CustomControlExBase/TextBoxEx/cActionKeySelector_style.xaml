<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:local="clr-namespace:Key2Btn.Base.CustomControlExBase.TextBoxEx"
                    xmlns:contextmenuex="clr-namespace:Key2Btn.Base.CustomControlExBase.ContextMenuEx">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Key2Btn.Base;component/CustomStyle/ScrollViewerEx/cScrollViewer_style.xaml"/>
        <ResourceDictionary Source="/Key2Btn.Base;component/CustomStyle/SliderEx/cSlider_style.xaml"/>
        <ResourceDictionary Source="/Key2Btn.Base;component/CustomStyle/TooltipEx/cTooltip_style.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <Style TargetType="{x:Type local:cActionKeySelector}">
        <Style.Resources>
            <local:cActionKeySelector_converter_comment2bool x:Key="cActionKeySelector_converter_comment2bool"/>
            
            <SolidColorBrush x:Key="BackgroundColor" Color="#FF202020" />
            <SolidColorBrush x:Key="BorderColor" Color="#FF3F3F46" />
            <SolidColorBrush x:Key="ForegroundColor" Color="White" />
            <SolidColorBrush x:Key="SecondaryColor" Color="#FF2d5a8c" />
            <SolidColorBrush x:Key="AccentColor" Color="#FF007ACC" />

            <DrawingBrush x:Key="DashedLine" TileMode="Tile" Viewport="0,0,9,1" ViewportUnits="Absolute">
                <DrawingBrush.Drawing>
                    <DrawingGroup>
                        <!-- White stripe -->
                        <GeometryDrawing>
                            <GeometryDrawing.Geometry>
                                <RectangleGeometry Rect="0,0,3,1"/>
                            </GeometryDrawing.Geometry>
                            <GeometryDrawing.Brush>
                                <SolidColorBrush Color="LightGray"/>
                            </GeometryDrawing.Brush>
                        </GeometryDrawing>
                        <!-- Black stripe -->
                        <GeometryDrawing>
                            <GeometryDrawing.Geometry>
                                <RectangleGeometry Rect="3,0,1,1"/>
                            </GeometryDrawing.Geometry>
                            <GeometryDrawing.Brush>
                                <SolidColorBrush Color="Black"/>
                            </GeometryDrawing.Brush>
                        </GeometryDrawing>
                    </DrawingGroup>
                </DrawingBrush.Drawing>
            </DrawingBrush>

            <!--图标-->
            <DataTemplate x:Key="ButtonIcon">
                <Path Width="8" 
                      Height="8"
                      Stretch="Uniform"
                      Data="M810.666667 554.666667l-256 0 0 256c0 25.6-17.066667 42.666667-42.666667 42.666667s-42.666667-17.066667-42.666667-42.666667l0-256L213.333333 554.666667c-25.6 0-42.666667-17.066667-42.666667-42.666667s17.066667-42.666667 42.666667-42.666667l256 0L469.333333 213.333333c0-25.6 17.066667-42.666667 42.666667-42.666667s42.666667 17.066667 42.666667 42.666667l0 256 256 0c25.6 0 42.666667 17.066667 42.666667 42.666667S836.266667 554.666667 810.666667 554.666667z"
                      Fill="White"
                      SnapsToDevicePixels="True"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Focusable="False"/>
            </DataTemplate>

            <!--ActionPackets(Item)-->
            <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="FontSize" Value="13" />
                <Setter Property="Padding" Value="2,0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Grid>
                                <Border x:Name="innerBorder" 
                                        Background="{TemplateBinding Background}" 
                                        Padding="{TemplateBinding Padding}" 
                                        CornerRadius="1.5"
                                        SnapsToDevicePixels="true">
                                    <!--<ContentPresenter Margin="2"/>-->

                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="keybox"/>
                                            <ColumnDefinition Width="8"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>

                                        <!--Key-->
                                        <TextBlock Grid.Column="0" Text="{Binding Key, Mode=OneWay}" TextTrimming="CharacterEllipsis" MaxWidth="36"/>
                                        
                                        <!--Comment-->
                                        <TextBlock Grid.Column="2" Text="{Binding Comment, Mode=OneWay}" TextTrimming="CharacterEllipsis"/>

                                    </Grid>
                                </Border>

                                <!--气泡-->
                                <Popup x:Name="PART_Popup" IsOpen="False"
                                       AllowsTransparency="True"
                                       Placement="Right"
                                       HorizontalOffset="2"
                                       VerticalOffset="2.5"
                                       StaysOpen="True" 
                                       Focusable="True">
                                    <Border x:Name="PopupContent"
                                            Background="Black"
                                            BorderBrush="White" 
                                            BorderThickness="1" 
                                            CornerRadius="2.5"
                                            Padding="3,2,3,2">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="8"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            
                                            <TextBlock Grid.Column="0" Grid.Row="0" Text="ActionKey:" Foreground="White"/>
                                            <TextBlock Grid.Column="0" Grid.Row="1" Text="ActionComment:" Foreground="White"/>

                                            <TextBlock Grid.Column="2" Grid.Row="0" 
                                                       Foreground="White"
                                                       TextWrapping="Wrap" MaxWidth="240"
                                                       Text="{Binding Key, Mode=OneWay}"/>
                                            <TextBlock Grid.Column="2" Grid.Row="1" 
                                                       Foreground="White"
                                                       TextWrapping="Wrap" MaxWidth="240"
                                                       Text="{Binding Comment, Mode=OneWay}"/>
                                        </Grid>
                                    </Border>
                                </Popup>
                            </Grid>
                            
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="innerBorder" Property="Background" Value="{StaticResource SecondaryColor}"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="innerBorder" Property="Background" Value="{StaticResource AccentColor}"/>
                                </Trigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="False"/>
                                        <Condition Binding="{Binding Comment, Converter={StaticResource cActionKeySelector_converter_comment2bool}, Mode=OneWay}" Value="True"/>
                                    </MultiDataTrigger.Conditions>

                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                                                Storyboard.TargetName="PART_Popup">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0.2" Value="False"/>
                                                </BooleanAnimationUsingKeyFrames>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                 Storyboard.TargetName="PopupContent"
                                                                 Duration="0:0:0.15"
                                                                 To="0"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.EnterActions>
                                    <MultiDataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                                                Storyboard.TargetName="PART_Popup">
                                                    <DiscreteBooleanKeyFrame  KeyTime="0:0:0.0" Value="True"/>
                                                </BooleanAnimationUsingKeyFrames>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                 Storyboard.TargetName="PopupContent"
                                                                 Duration="0:0:0.05"
                                                                 To="1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.ExitActions>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--ActionPacket列表-->
            <Style x:Key="ListBoxStyle" TargetType="{x:Type ListBox}">
                <Style.Resources>
                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ListBoxItemStyle}"/>
                </Style.Resources>

                <Setter Property="Width" Value="144"/>
                <Setter Property="MaxWidth" Value="304"/>
                <Setter Property="MaxHeight" Value="384"/>
                <Setter Property="Background" Value="{StaticResource BackgroundColor}"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundColor}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBox}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="True"
                                    CornerRadius="2.5">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <!--顶部横幅-->
                                    <TextBlock Grid.Row="0" Text="ActionPacket" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    
                                    <!--分界线-->
                                    <Border Grid.Row="1" Height="1" Margin="0,1,0,1" Background="{StaticResource DashedLine}"/>

                                    <!--列表本体-->
                                    <ScrollViewer Grid.Row="2" Focusable="False" Padding="{TemplateBinding Padding}" Margin="0"
                                                  Style="{StaticResource cScrollViewerStyle}">
                                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </ScrollViewer>
                                </Grid>
                            </Border>
                            
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource BackgroundColor}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SecondaryColor}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsGrouping" Value="True"/>
                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel IsVirtualizing="True"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!--按钮-->
            <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="Width" Value="16"/>
                <Setter Property="MinHeight" Value="16"/>
                <Setter Property="IsEnabled" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid Background="Transparent">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseEnter">
                                        <i:ChangePropertyAction PropertyName="Opacity" Value="0.5"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseLeave">
                                        <i:ChangePropertyAction PropertyName="Opacity" Value="1.0"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseDown">
                                        <i:ChangePropertyAction PropertyName="Opacity" Value="1.0"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseUp">
                                        <i:ChangePropertyAction PropertyName="Opacity" Value="0.5"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>

                                <!--底色-->
                                <Border Background="#FF202020" CornerRadius="2.5" Height="16"/>

                                <!--内容-->
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  IsHitTestVisible="False"
                                                  Margin="2"/>

                                <!--气泡-->
                                <Popup x:Name="PART_Popup" IsOpen="False"
                                       AllowsTransparency="True"
                                       PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                       Placement="Right"
                                       StaysOpen="True" 
                                       Focusable="True"
                                       Margin="-2">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Opened">
                                            <i:InvokeCommandAction Command="{Binding PopupOpendCommand, RelativeSource={RelativeSource AncestorType={x:Type local:cActionKeySelector}}}"
                                                                   PassEventArgsToCommand="True"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>

                                    <Border x:Name="PopupContent" MinWidth="60" MinHeight="25"
                                            CornerRadius="{Binding BorderCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type contextmenuex:cContextMenu}}}"
                                            BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource AncestorType={x:Type contextmenuex:cContextMenu}}}"
                                            BorderBrush="Crimson">
                                        <ListBox Style="{StaticResource ListBoxStyle}"
                                                 ItemsSource="{Binding ActionPackets, RelativeSource={RelativeSource AncestorType={x:Type local:cActionKeySelector}}}"
                                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="SelectionChanged">
                                                    <i:InvokeCommandAction Command="{Binding ListBoxSelectionChangedCommand, RelativeSource={RelativeSource AncestorType={x:Type local:cActionKeySelector}}}"
                                                                           CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, Mode=OneWay}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ListBox>
                                    </Border>
                                </Popup>

                            </Grid>

                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </DataTrigger>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                                                Storyboard.TargetName="PART_Popup">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0.6" Value="False"/>
                                                </BooleanAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                               Storyboard.TargetName="PopupContent">
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.25" Value="1"/>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.55" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                                                Storyboard.TargetName="PART_Popup">
                                                    <DiscreteBooleanKeyFrame  KeyTime="0:0:0.0" Value="True"/>
                                                </BooleanAnimationUsingKeyFrames>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                 Storyboard.TargetName="PopupContent"
                                                                 Duration="0:0:0.05"
                                                                 To="1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        
        <!--ActionKeySelector本体-->
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="MinWidth" Value="75"/>
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="SelectionBrush" Value="White"/>
        <Setter Property="SelectionTextBrush" Value="Black"/>
        <Setter Property="CaretBrush" Value="OrangeRed"/>
        <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:cActionKeySelector}">
                    <Border x:Name="border">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>

                            <Rectangle Grid.ColumnSpan="2"             Fill="White"    Opacity="0.2" RadiusX="2" RadiusY="2" />
                            <Rectangle Grid.ColumnSpan="2" x:Name="bk" Fill="DarkGray" Opacity="0.1" RadiusX="2" RadiusY="2" />

                            <ScrollViewer Grid.Column="0" x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                                          VerticalAlignment="Center" Margin="4,0,0,0">
                                <ScrollViewer.Effect>
                                    <DropShadowEffect Color="Black" BlurRadius="0" ShadowDepth="1"/>
                                </ScrollViewer.Effect>
                            </ScrollViewer>

                            <!--Popup容器-->
                            <Border Grid.Column="1" CornerRadius="1.5" HorizontalAlignment="Right"
                                    Margin="2,0,2,0">
                                <Button DataContext="{Binding}"
                                        ContentTemplate="{StaticResource ButtonIcon}" 
                                        Style="{StaticResource ButtonStyle}"/>
                            </Border>
                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="bk" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Opacity" TargetName="bk" Value="0.8"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>