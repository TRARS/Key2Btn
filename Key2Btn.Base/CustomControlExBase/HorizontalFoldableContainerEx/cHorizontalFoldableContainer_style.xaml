<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:local="clr-namespace:Key2Btn.Base.CustomControlExBase.HorizontalFoldableContainerEx">

    <local:cHorizontalFoldableContainer_converter_height2height x:Key="cHorizontalFoldableContainer_converter_height2height"/>
    <local:cHorizontalFoldableContainer_converter_scale2visibility x:Key="cHorizontalFoldableContainer_converter_scale2visibility"/>
    <local:cHorizontalFoldableContainer_converter_visibility2visibility x:Key="cHorizontalFoldableContainer_converter_visibility2visibility"/>
    <local:cHorizontalFoldableContainer_converter_visibility2ishittestvisible x:Key="cHorizontalFoldableContainer_converter_visibility2ishittestvisible"/>

    <SolidColorBrush x:Key="MouseOverColor" Color="Yellow"/>
    <SolidColorBrush x:Key="MousePressedColor" Color="Cyan"/>
    <SolidColorBrush x:Key="ContractedColor" Color="DimGray"/>
    <SolidColorBrush x:Key="ExpandedColor" Color="DarkGray"/>

    <Style TargetType="{x:Type local:cHorizontalFoldableContainer}">
        <Setter Property="ArrowVisibility" Value="Visible"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:cHorizontalFoldableContainer}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <!--Header-->
                            <Grid Grid.Column="0" 
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Top">
                                
                                <ContentControl Content="{TemplateBinding Header}"/>

                                <!--Arrow-->
                                <Border x:Name="expander"
                                        Visibility="{TemplateBinding ArrowVisibility}">
                                    <Button Background="Transparent"
                                            HorizontalAlignment="Stretch" 
                                            VerticalAlignment="Stretch"
                                            Command="{TemplateBinding ArrowCommand}">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Border Background="{TemplateBinding Background}">
                                                                <Path x:Name="arrow"
                                                                  Data="M677.888 598.528l-254.464 239.616c-15.872 14.848-38.912 18.944-59.392 11.264-20.48-8.192-33.792-26.624-33.792-47.616V322.56c0-20.992 13.312-39.424 33.792-47.616 6.656-2.56 13.824-4.096 20.992-4.096 14.336 0 28.16 5.12 38.4 15.36l254.464 239.616c10.24 9.728 15.872 23.04 15.872 36.352 0.512 13.824-5.632 26.624-15.872 36.352z"
                                                                  Width="8" 
                                                                  Height="{Binding Width, RelativeSource={RelativeSource Self}}"
                                                                  HorizontalAlignment="Right" 
                                                                  VerticalAlignment="Stretch"
                                                                  Stretch="Uniform"
                                                                  Fill="{StaticResource ContractedColor}"
                                                                  Margin="0,0,4,1"
                                                                  RenderTransformOrigin="0.5,0.5">
                                                                    <Path.RenderTransform>
                                                                        <RotateTransform Angle="0"/>
                                                                    </Path.RenderTransform>
                                                                </Path>
                                                            </Border>

                                                            <ControlTemplate.Triggers>
                                                                <DataTrigger Binding="{Binding BodyVisibility,
                                                                                               RelativeSource={RelativeSource AncestorType={x:Type local:cHorizontalFoldableContainer}},
                                                                                               Mode=OneWay}" 
                                                                         Value="Visible">
                                                                    <Setter Property="Fill" Value="{StaticResource ExpandedColor}" TargetName="arrow"/>
                                                                    <DataTrigger.EnterActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard FillBehavior="HoldEnd" 
                                                                                    Storyboard.TargetProperty="(RenderTransform).(RotateTransform.Angle)"
                                                                                    Storyboard.TargetName="arrow">
                                                                                <DoubleAnimationUsingKeyFrames>
                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="90"/>
                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="115"/>
                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="90"/>
                                                                                </DoubleAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </DataTrigger.EnterActions>
                                                                    <DataTrigger.ExitActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard FillBehavior="HoldEnd" 
                                                                                    Storyboard.TargetProperty="(RenderTransform).(RotateTransform.Angle)"
                                                                                    Storyboard.TargetName="arrow">
                                                                                <DoubleAnimationUsingKeyFrames>
                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="-25"/>
                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                                                                                </DoubleAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </DataTrigger.ExitActions>
                                                                </DataTrigger>

                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Fill" Value="{StaticResource MouseOverColor}" TargetName="arrow"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Fill" Value="{StaticResource MousePressedColor}" TargetName="arrow"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </Border>
                            </Grid>

                            <!--Body-->
                            <ContentPresenter Grid.Column="1" x:Name="body"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Top"
                                              Visibility="{TemplateBinding BodyVisibility}"/>

                            <!--<TextBlock Text="{Binding Content.Parent.Text}"/>-->
                        </Grid>
                    </Border>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>